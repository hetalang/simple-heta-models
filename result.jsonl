{"prompt":" Create Heta model with reversible reaction and stoicheometry: 2s1 + 3s2 <=> p1 + p2. Use mass action law. Define units for time, volume, and concentration. ","completion":"// index.heta\n\n// units\n#defineUnit s {units: second};\n#defineUnit L {units: litre};\n#defineUnit uM {units: (1e-6 mole)/litre};\n#defineUnit umole {units: (1e-6 mole)};\n\n// time\nt {units: s};\n\n// compartments\ncomp1 @Compartment {units: L} .= 1;\n\n// species\ns1 @Species {compartment: comp1, units: uM} .= 100;\ns2 @Species {compartment: comp1, units: uM} .= 10;\np1 @Species {compartment: comp1, units: uM} .= 10;\np2 @Species {compartment: comp1, units: uM} .= 0;\n\n// reactions\nr1 @Reaction {actors: 2s1 + 3s2 <=> p1 + p2, units: umole/s}; \nr1 := (k1 * s1^2 * s2^3 - k2 * p1 * p2) * comp1;\n\n// constants\nk1 @Const {units: 1/s/uM^4} = 0.01;\nk2 @Const {units: 1/s/uM} = 0.001;\n"}
{"prompt":" Create Heta model with reversible reaction and stoicheometry: 2s1 + 3s2 <=> p1 + p2. Use mass action law. ","completion":"// index.heta\n\n// compartments\ncomp1 @Compartment .= 1;\n\n// species\ns1 @Species {compartment: comp1} .= 100;\ns2 @Species {compartment: comp1} .= 10;\np1 @Species {compartment: comp1} .= 10;\np2 @Species {compartment: comp1} .= 0;\n\n// reactions\nr1 @Reaction {actors: 2s1 + 3s2 <=> p1 + p2}; \nr1 := (k1 * s1^2 * s2^3 - k2 * p1 * p2) * comp1;\n\n// constants\nk1 @Const = 0.01;\nk2 @Const = 0.001;\n"}
{"prompt":" Create a Heta model with a single compartment, and reaction with stoicheometry 2s1 + 3s2 => p1 + p2 ","completion":"// index.heta\n\n// compartments\ncomp1 @Compartment .= 1;\n\n// species\ns1 @Species {compartment: comp1} .= 100;\ns2 @Species {compartment: comp1} .= 10;\np1 @Species {compartment: comp1} .= 10;\np2 @Species {compartment: comp1} .= 0;\n\n// reactions\nr1 @Reaction {actors: 2s1 + 3s2 => p1 + p2} := k1 * s1^2 * s2^3 * comp1;\n\n// constants\nk1 @Const = 0.01;\n"}
{"prompt":" Write Heta model with reaction where substrate is transformed to product with stoichiometry 2:1. ","completion":"// index.heta\n\n// compartments\ncomp1 @Compartment .= 1;\n\n// species\ns1 @Species {compartment: comp1} .= 100;\np1 @Species {compartment: comp1} .= 0;\n\n// reactions\nr1 @Reaction {actors: 2s1 => p1} := k1 * s1^2 * comp1;\n\n// constants\nk1 @Const = 0.01;\n"}
{"prompt":" Create Heta model where substrate is eliminagted with stoichiometry 2. ","completion":"// index.heta\n\n// compartments\ncomp1 @Compartment .= 1;\n\n// species\ns1 @Species {compartment: comp1} .= 100;\n\n// reactions\nr1 @Reaction {actors: 2s1 =>} := k1 * s1^2 * comp1;\n\n// constants\nk1 @Const = 0.01;\n"}
{"prompt":" Create Heta model with one substrate and zero product with mass-action law. ","completion":"// index.heta\n\n// compartments\ncomp1 @Compartment .= 1;\n\n// species\ns1 @Species {compartment: comp1} .= 100;\n\n// reactions\nr1 @Reaction {actors: s1 =>} := k1 * s1 * comp1;\n\n// constants\nk1 @Const = 0.01;\n"}
{"prompt":" Build Heta model which desribes the transport of a substance from one compartment to another. The concentration of source species is constant and the transport is described by a first order reaction. ","completion":"// index.heta\n\n// compartments\ncomp1 @Compartment .= 1;\ncomp2 @Compartment .= 3;\n\n// species\ns1 @Species {compartment: comp1, boundary: true} .= 100;\np1 @Species {compartment: comp2} .= 0;\n\n// reactions\nr1 @Reaction {actors: s1 => p1} := k1 * s1 * comp1;\n\n// parameters\nk1 @Const = 0.1;\n"}
{"prompt":" Create Heta model where product is transformed from boundary (buffered) species. ","completion":"// index.heta\n\n// compartments\ncomp1 @Compartment .= 1;\n\n// species\np1 @Species {compartment: comp1} .= 0;\ns1 @Species {compartment: comp1, boundary: true} .= 100;\n\n// reactions\nr1 @Reaction {actors: s1 => p1} := k1 * s1 * comp1;\n\n// parameters\nk1 @Const = 0.1;\n"}
{"prompt":" Do not use export action. Create Heta model for constant production of species p1 in compartment comp1. ","completion":"// index.heta\n\n// compartments\ncomp1 @Compartment .= 1;\n\n// species\np1 @Species {compartment: comp1} .= 0;\n\n// reactions\nr1 @Reaction {actors: => p1} := vsyn;\n\n// parameters\nvsyn @Const = 0.1;\n"}
{"prompt":" Create simple Heta model with constant synthesis of some metabolite. ","completion":"// index.heta\n\n// compartments\ncomp1 @Compartment .= 1;\n\n// species\nm1 @Species {compartment: comp1} .= 0;\n\n// reactions\nr1 @Reaction {actors: => m1} := vsyn;\n\n// parameters\nvsyn @Const = 0.1;\n"}
{"prompt":" Create simple model with reversible MM. Use short names for units like in qsp-units.heta ","completion":"// index.heta\n\n// list of units\n#defineUnit s {units: second};\n#defineUnit uM {units: (1e-6 mole)/litre};\n#defineUnit L {units: litre};\n#defineUnit umole {units: (1e-6 mole)};\n#defineUnit UL {units: dimensionless};\n\n// default time\nt {units: s};\n\n// compartment of size 1\ncomp1 @Compartment {units: L} .= 1;\n\n// substrate and product species\ns1 @Species {compartment: comp1, units: uM} .= 100;\np1 @Species {compartment: comp1, units: uM} .= 0;\n\n// reaction\nr1 @Reaction {actors: s1 -> p1, reversible: true, units: umole/s}; \nr1 := kcat * (s1 - p1/Keq) / (Km_s1 + s1 + Km_s1 / Km_p1 * p1) * comp1;\n\n// reaction constant\nkcat @Const {units: uM/s} = 0.1;\nKm_s1 @Const {units: uM} = 0.5;\nKm_p1 @Const {units: uM} = 1.1;\nKeq @Const {units: UL} = 10;\n"}
{"prompt":" Create reversible MM kinetics model with 1 substrate and 1 product. Set units for all quantities without defineUnits. Units must be: second, micro moles, litre, etc. ","completion":"// index.heta\n\n// default time\nt {units: second};\n\n// compartment of size 1\ncomp1 @Compartment {units: litre} .= 1;\n\n// substrate and product species\ns1 @Species {compartment: comp1, units: (1e-6 mole)/litre} .= 100;\np1 @Species {compartment: comp1, units: (1e-6 mole)/litre} .= 0;\n\n// reaction\nr1 @Reaction {actors: s1 -> p1, reversible: true, units: (1e-6 mole)/second}; \nr1 := kcat * (s1 - p1/Keq) / (Km_s1 + s1 + Km_s1 / Km_p1 * p1) * comp1;\n\n// reaction constant\nkcat @Const {units: (1e-6 mole)/litre/second} = 0.1;\nKm_s1 @Const {units: (1e-6 mole)/litre} = 0.5;\nKm_p1 @Const {units: (1e-6 mole)/litre} = 1.1;\nKeq @Const {units: dimensionless} = 10;\n"}
{"prompt":" Create simple model with reversible MM. Add units to all components from qsp-units.heta from default template. ","completion":"// index.heta\n\ninclude ./qsp-units.heta;\n\n// default time\nt {units: s};\n\n// compartment of size 1\ncomp1 @Compartment {units: L} .= 1;\n\n// substrate and product species\ns1 @Species {compartment: comp1, units: uM} .= 100;\np1 @Species {compartment: comp1, units: uM} .= 0;\n\n// reaction\nr1 @Reaction {actors: s1 -> p1, reversible: true, units: umole/s}; \nr1 := kcat * (s1 - p1/Keq) / (Km_s1 + s1 + Km_s1 / Km_p1 * p1) * comp1;\n\n// reaction constant\nkcat @Const {units: uM/s} = 0.1;\nKm_s1 @Const {units: uM} = 0.5;\nKm_p1 @Const {units: uM} = 1.1;\nKeq @Const {units: UL} = 10;\n"}
{"prompt":" Create simple Heta model with reversible Michaelis-Menten (MM) kinetics. ","completion":"// index.heta\n\n// compartment of size 1\ncomp1 @Compartment .= 1;\n\n// substrate and product species\ns1 @Species {compartment: comp1} .= 100;\np1 @Species {compartment: comp1} .= 0;\n\n// reaction\nr1 @Reaction {actors: s1 -> p1, reversible: true}; \nr1 := Vmax * (s1 - p1 / Keq) / (Km_s1 + s1 + Km_s1 / Km_p1 * p1) * comp1;\n\n// reaction constant\nVmax @Const = 0.1;\nKm_s1 @Const = 0.5;\nKm_p1 @Const = 1.1;\nKeq @Const = 10;\n"}
{"prompt":" Create simple Heta model with Michaelis-Menten (MM) type reaction for r1. ","completion":"// index.heta\n\n// compartment of size 1\ncomp1 @Compartment .= 1;\n\n// substrate and product species\ns1 @Species {compartment: comp1} .= 100;\np1 @Species {compartment: comp1} .= 0;\n\n// reaction\nr1 @Reaction {actors: s1 -> p1} := Vmax * s1 / (Km + s1) * comp1;\n\n// reaction constant\nVmax @Const = 0.1;\nKm @Const = 0.5;\n"}
{"prompt":" Create simple kinetic model with two species and one reaction in Heta notation. Mass action kinetics is used. ","completion":"// index.heta\n\n// compartment of size 1\ncomp1 @Compartment .= 1;\n\n// substrate and product species\ns1 @Species {compartment: comp1} .= 100;\np1 @Species {compartment: comp1} .= 0;\n\n// reaction\nr1 @Reaction {actors: s1 -> p1} := k1 * s1 * comp1;\n\n// reaction constant\nk1 @Const = 0.1;\n"}
{"prompt":" Create the simplest QSP model in Heta notation. Something like \"hello world\" in programming. One compartment, one species, one reaction with mass action. ","completion":"// index.heta\n\n// compartment of size 1\ncomp1 @Compartment .= 1;\n\n// species with initial concentration 10\ns1 @Species {compartment: comp1} .= 10;\n\n// reaction of s1 degradation\nr1 @Reaction {actors: s1 => } := k1 * s1 * comp1;\n\n// constant of reaction\nk1 @Const = 0.01;\n"}